apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'groovy'
apply plugin: 'signing'
apply plugin: 'maven'

// project information
version = '1.1.32-SNAPSHOT'
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
sourceCompatibility = jdkVersion
targetCompatibility = jdkVersion
group = 'jp.dodododo.dao'

compileJava {
  options.encoding = 'UTF-8'
}

compileTestJava {
  options.encoding = 'UTF-8'
  options.compilerArgs = ['-proc:none']
}

javadoc {
  options.encoding    = 'UTF-8'
  options.charSet     = 'UTF-8'
  options.docEncoding = 'UTF-8'
}

jar {
  manifest {
    attributes 'Implementation-Title': 'samurai-dao', 'Implementation-Version': version
  }
}

test {
  scanForTestClasses = false
  includes = ['**/*Test.class']
}

task wrapper(type: Wrapper) {
  gradleVersion = '1.11'
}

repositories {
  mavenCentral()
  maven {url 'http://janerics.googlecode.com/svn/maven2/'}
  maven {url 'http://janerics.googlecode.com/svn/maven2-snapshot/'}
  maven {url 'http://www.ibiblio.org/maven2/'}
  maven {url 'http://www.xerial.org/maven/repository/artifact/'}
  maven {url 'http://www.xerial.org/maven/repository/snapshot/'}
}

dependencies {
  compile 'ognl:ognl:2.7.3'
  compile 'jp.dodododo.janerics:janerics:1.0.0'
  compile 'commons-lang:commons-lang:2.6'
  compile 'commons-logging:commons-logging:1.1.3'
  compile 'org.freemarker:freemarker:2.3.19'
  providedCompile 'org.apache.geronimo.specs:geronimo-j2ee_1.4_spec:1.1'
  providedCompile 'mysql:mysql-connector-java:5.1.29'
  testCompile 'log4j:log4j:1.2.17'
  testCompile 'org.hsqldb:hsqldb:2.2.8'
  testCompile 'org.xerial:sqlite-jdbc:3.7.2'
  testCompile 'junit:junit:4.10'
}

// creating jars
task sourcesJar (type : Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar (type : Jar, dependsOn : javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

// collect artifacts to be signed
artifacts {
  archives jar
  archives sourcesJar
  archives javadocJar
}

// sign artifacts
signing {
  required { isReleaseVersion && gradle.taskGraph.hasTask('uploadArchives') }
  sign configurations.archives
}

// uploading artifacts
uploadArchives {
  repositories.mavenDeployer {
    beforeDeployment {MavenDeployment deployment ->
      signing.signPom(deployment)
    }
//    repository (url : sonatypeUrl) {
//      authentication (
//        userName : sonatypeUsername,
//        password : sonatypePassword
//      )
//    }
//    snapshotRepository (url : sonatypeSnapshotUrl) {
//      authentication (
//        userName : sonatypeUsername,
//        password : sonatypePassword
//      )
//    }
    pom.project {
      name project.name
      packaging 'jar'
      description 'Java Database Access Framework'
      url projectUrl
      licenses {
        license {
          name 'The Apache Software License, Version 2.0'
          url 'http://www.apache.org/license/LICENSE-2.0.txt'
          distribution 'repo'
        }
      }
      scm {
        url githubUrl
        connection "scm:git:${githubUrl}"
        developerConnection "scm:git:${githubUrl}"
      }
      developers {
        developer {
          id  'satoshi_kimura'
          name  'Satoshi Kimura'
          email 'satoshi.kimura@gmail.com'
        }
      }
    }
  }
}
